---
- name: 'Ensure packages'
  ansible.builtin.package:
    name: 'unbound'
    state: 'present'
    update_cache: true
  register: 'unbound_installed'

- name: 'Gather running services'
  ansible.builtin.service_facts:

- name: 'Ensure firewalld'
  ansible.posix.firewalld:
    service: 'dns'
    state: 'enabled'
    permanent: true
    immediate: true
  when:
    - ansible_facts['services']['firewalld.service']['state'] is defined
    - ansible_facts['services']['firewalld.service']['state'] == 'running'

- name: 'Remove default config'  # noqa no-handler
  ansible.builtin.file:
    path: "{{ default_conf }}"
    state: 'absent'
  loop:
    - '/etc/unbound/unbound.conf.d'
    - '/etc/unbound/conf.d'
    - '/etc/unbound/keys.d'
    - '/etc/unbound/local.d'
  loop_control:
    loop_var: 'default_conf'
  when: unbound_installed['changed']

- name: 'Ensure remote-control keys'
  ansible.builtin.command: /usr/sbin/unbound-control-setup
  register: 'unbound_control_key_update'
  failed_when: unbound_control_key_update['rc'] != 0
  changed_when: "'Generating' in unbound_control_key_update['stdout']"

- name: 'Ensure root.key'
  ansible.builtin.command: /usr/sbin/unbound-anchor -a /var/lib/unbound/root.key
  register: 'unbound_root_key_update'
  changed_when: unbound_root_key_update['rc'] == 1
  failed_when: unbound_root_key_update['rc'] > 1

- name: 'Ensure unbound.conf'
  ansible.builtin.template:
    src: 'unbound.conf.j2'
    dest: '/etc/unbound/unbound.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    validate: '/usr/sbin/unbound-checkconf %s'
  notify: 'Restart unbound'

- name: 'Ensure service'
  ansible.builtin.systemd:
    name: 'unbound'
    enabled: true
    state: 'started'
